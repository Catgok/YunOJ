// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userservice

import (
	"context"

	"YunOJ/services/user/rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginByPhoneRequest     = user.LoginByPhoneRequest
	LoginByPhoneResponse    = user.LoginByPhoneResponse
	RegisterByPhoneRequest  = user.RegisterByPhoneRequest
	RegisterByPhoneResponse = user.RegisterByPhoneResponse
	User                    = user.User

	UserService interface {
		RegisterByPhone(ctx context.Context, in *RegisterByPhoneRequest, opts ...grpc.CallOption) (*RegisterByPhoneResponse, error)
		LoginByPhone(ctx context.Context, in *LoginByPhoneRequest, opts ...grpc.CallOption) (*LoginByPhoneResponse, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) RegisterByPhone(ctx context.Context, in *RegisterByPhoneRequest, opts ...grpc.CallOption) (*RegisterByPhoneResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.RegisterByPhone(ctx, in, opts...)
}

func (m *defaultUserService) LoginByPhone(ctx context.Context, in *LoginByPhoneRequest, opts ...grpc.CallOption) (*LoginByPhoneResponse, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.LoginByPhone(ctx, in, opts...)
}
