// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: judge.proto

package judge

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JudgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProblemId int64  `protobuf:"varint,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Language  int64  `protobuf:"varint,4,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *JudgeRequest) Reset() {
	*x = JudgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeRequest) ProtoMessage() {}

func (x *JudgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeRequest.ProtoReflect.Descriptor instead.
func (*JudgeRequest) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0}
}

func (x *JudgeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JudgeRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *JudgeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *JudgeRequest) GetLanguage() int64 {
	if x != nil {
		return x.Language
	}
	return 0
}

type JudgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *JudgeResponse) Reset() {
	*x = JudgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeResponse) ProtoMessage() {}

func (x *JudgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeResponse.ProtoReflect.Descriptor instead.
func (*JudgeResponse) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{1}
}

func (x *JudgeResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *JudgeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JudgeCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input  string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *JudgeCase) Reset() {
	*x = JudgeCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeCase) ProtoMessage() {}

func (x *JudgeCase) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeCase.ProtoReflect.Descriptor instead.
func (*JudgeCase) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{2}
}

func (x *JudgeCase) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *JudgeCase) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type AddJudgeCasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64        `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Cases     []*JudgeCase `protobuf:"bytes,2,rep,name=cases,proto3" json:"cases,omitempty"`
}

func (x *AddJudgeCasesRequest) Reset() {
	*x = AddJudgeCasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJudgeCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJudgeCasesRequest) ProtoMessage() {}

func (x *AddJudgeCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJudgeCasesRequest.ProtoReflect.Descriptor instead.
func (*AddJudgeCasesRequest) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{3}
}

func (x *AddJudgeCasesRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddJudgeCasesRequest) GetCases() []*JudgeCase {
	if x != nil {
		return x.Cases
	}
	return nil
}

type AddJudgeCasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CaseIds []int64 `protobuf:"varint,3,rep,packed,name=case_ids,json=caseIds,proto3" json:"case_ids,omitempty"`
}

func (x *AddJudgeCasesResponse) Reset() {
	*x = AddJudgeCasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJudgeCasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJudgeCasesResponse) ProtoMessage() {}

func (x *AddJudgeCasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJudgeCasesResponse.ProtoReflect.Descriptor instead.
func (*AddJudgeCasesResponse) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{4}
}

func (x *AddJudgeCasesResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddJudgeCasesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddJudgeCasesResponse) GetCaseIds() []int64 {
	if x != nil {
		return x.CaseIds
	}
	return nil
}

type UpdateJudgeCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId int64  `protobuf:"varint,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	Input  string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Output string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *UpdateJudgeCaseRequest) Reset() {
	*x = UpdateJudgeCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJudgeCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJudgeCaseRequest) ProtoMessage() {}

func (x *UpdateJudgeCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJudgeCaseRequest.ProtoReflect.Descriptor instead.
func (*UpdateJudgeCaseRequest) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateJudgeCaseRequest) GetCaseId() int64 {
	if x != nil {
		return x.CaseId
	}
	return 0
}

func (x *UpdateJudgeCaseRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *UpdateJudgeCaseRequest) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type UpdateJudgeCaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateJudgeCaseResponse) Reset() {
	*x = UpdateJudgeCaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJudgeCaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJudgeCaseResponse) ProtoMessage() {}

func (x *UpdateJudgeCaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJudgeCaseResponse.ProtoReflect.Descriptor instead.
func (*UpdateJudgeCaseResponse) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateJudgeCaseResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateJudgeCaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetJudgeCaseIdsByProblemIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *GetJudgeCaseIdsByProblemIdRequest) Reset() {
	*x = GetJudgeCaseIdsByProblemIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJudgeCaseIdsByProblemIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgeCaseIdsByProblemIdRequest) ProtoMessage() {}

func (x *GetJudgeCaseIdsByProblemIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgeCaseIdsByProblemIdRequest.ProtoReflect.Descriptor instead.
func (*GetJudgeCaseIdsByProblemIdRequest) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{7}
}

func (x *GetJudgeCaseIdsByProblemIdRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetJudgeCaseIdsByProblemIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CaseIds []int64 `protobuf:"varint,3,rep,packed,name=case_ids,json=caseIds,proto3" json:"case_ids,omitempty"`
}

func (x *GetJudgeCaseIdsByProblemIdResponse) Reset() {
	*x = GetJudgeCaseIdsByProblemIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJudgeCaseIdsByProblemIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgeCaseIdsByProblemIdResponse) ProtoMessage() {}

func (x *GetJudgeCaseIdsByProblemIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgeCaseIdsByProblemIdResponse.ProtoReflect.Descriptor instead.
func (*GetJudgeCaseIdsByProblemIdResponse) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{8}
}

func (x *GetJudgeCaseIdsByProblemIdResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetJudgeCaseIdsByProblemIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetJudgeCaseIdsByProblemIdResponse) GetCaseIds() []int64 {
	if x != nil {
		return x.CaseIds
	}
	return nil
}

type DeleteJudgeCaseByCaseIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId int64 `protobuf:"varint,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *DeleteJudgeCaseByCaseIdRequest) Reset() {
	*x = DeleteJudgeCaseByCaseIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJudgeCaseByCaseIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJudgeCaseByCaseIdRequest) ProtoMessage() {}

func (x *DeleteJudgeCaseByCaseIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJudgeCaseByCaseIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteJudgeCaseByCaseIdRequest) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteJudgeCaseByCaseIdRequest) GetCaseId() int64 {
	if x != nil {
		return x.CaseId
	}
	return 0
}

type DeleteJudgeCaseByCaseIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteJudgeCaseByCaseIdResponse) Reset() {
	*x = DeleteJudgeCaseByCaseIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJudgeCaseByCaseIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJudgeCaseByCaseIdResponse) ProtoMessage() {}

func (x *DeleteJudgeCaseByCaseIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJudgeCaseByCaseIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteJudgeCaseByCaseIdResponse) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteJudgeCaseByCaseIdResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteJudgeCaseByCaseIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_judge_proto protoreflect.FileDescriptor

var file_judge_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x0c, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x0d,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x09, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5d, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x05,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x22, 0x5f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x47, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x42, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x42, 0x79, 0x43, 0x61, 0x73, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22,
	0x4f, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61,
	0x73, 0x65, 0x42, 0x79, 0x43, 0x61, 0x73, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0xbd, 0x03, 0x0a, 0x0c, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x32, 0x0a, 0x05, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x43, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x28, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65,
	0x49, 0x64, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x42, 0x79, 0x43, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x25, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65, 0x42, 0x79, 0x43, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x43, 0x61, 0x73, 0x65,
	0x42, 0x79, 0x43, 0x61, 0x73, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_judge_proto_rawDescOnce sync.Once
	file_judge_proto_rawDescData = file_judge_proto_rawDesc
)

func file_judge_proto_rawDescGZIP() []byte {
	file_judge_proto_rawDescOnce.Do(func() {
		file_judge_proto_rawDescData = protoimpl.X.CompressGZIP(file_judge_proto_rawDescData)
	})
	return file_judge_proto_rawDescData
}

var file_judge_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_judge_proto_goTypes = []interface{}{
	(*JudgeRequest)(nil),                       // 0: judge.JudgeRequest
	(*JudgeResponse)(nil),                      // 1: judge.JudgeResponse
	(*JudgeCase)(nil),                          // 2: judge.JudgeCase
	(*AddJudgeCasesRequest)(nil),               // 3: judge.AddJudgeCasesRequest
	(*AddJudgeCasesResponse)(nil),              // 4: judge.AddJudgeCasesResponse
	(*UpdateJudgeCaseRequest)(nil),             // 5: judge.UpdateJudgeCaseRequest
	(*UpdateJudgeCaseResponse)(nil),            // 6: judge.UpdateJudgeCaseResponse
	(*GetJudgeCaseIdsByProblemIdRequest)(nil),  // 7: judge.GetJudgeCaseIdsByProblemIdRequest
	(*GetJudgeCaseIdsByProblemIdResponse)(nil), // 8: judge.GetJudgeCaseIdsByProblemIdResponse
	(*DeleteJudgeCaseByCaseIdRequest)(nil),     // 9: judge.DeleteJudgeCaseByCaseIdRequest
	(*DeleteJudgeCaseByCaseIdResponse)(nil),    // 10: judge.DeleteJudgeCaseByCaseIdResponse
}
var file_judge_proto_depIdxs = []int32{
	2,  // 0: judge.AddJudgeCasesRequest.cases:type_name -> judge.JudgeCase
	0,  // 1: judge.JudgeService.Judge:input_type -> judge.JudgeRequest
	3,  // 2: judge.JudgeService.AddJudgeCases:input_type -> judge.AddJudgeCasesRequest
	5,  // 3: judge.JudgeService.UpdateJudgeCase:input_type -> judge.UpdateJudgeCaseRequest
	7,  // 4: judge.JudgeService.GetJudgeCaseIdsByProblemId:input_type -> judge.GetJudgeCaseIdsByProblemIdRequest
	9,  // 5: judge.JudgeService.DeleteJudgeCaseByCaseId:input_type -> judge.DeleteJudgeCaseByCaseIdRequest
	1,  // 6: judge.JudgeService.Judge:output_type -> judge.JudgeResponse
	4,  // 7: judge.JudgeService.AddJudgeCases:output_type -> judge.AddJudgeCasesResponse
	6,  // 8: judge.JudgeService.UpdateJudgeCase:output_type -> judge.UpdateJudgeCaseResponse
	8,  // 9: judge.JudgeService.GetJudgeCaseIdsByProblemId:output_type -> judge.GetJudgeCaseIdsByProblemIdResponse
	10, // 10: judge.JudgeService.DeleteJudgeCaseByCaseId:output_type -> judge.DeleteJudgeCaseByCaseIdResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_judge_proto_init() }
func file_judge_proto_init() {
	if File_judge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_judge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddJudgeCasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddJudgeCasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJudgeCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJudgeCaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJudgeCaseIdsByProblemIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJudgeCaseIdsByProblemIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJudgeCaseByCaseIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJudgeCaseByCaseIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_judge_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_judge_proto_goTypes,
		DependencyIndexes: file_judge_proto_depIdxs,
		MessageInfos:      file_judge_proto_msgTypes,
	}.Build()
	File_judge_proto = out.File
	file_judge_proto_rawDesc = nil
	file_judge_proto_goTypes = nil
	file_judge_proto_depIdxs = nil
}
