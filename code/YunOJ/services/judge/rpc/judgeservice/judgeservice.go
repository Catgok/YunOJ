// Code generated by goctl. DO NOT EDIT.
// Source: judge.proto

package judgeservice

import (
	"context"

	"YunOJ/services/judge/rpc/judge"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddJudgeCasesRequest               = judge.AddJudgeCasesRequest
	AddJudgeCasesResponse              = judge.AddJudgeCasesResponse
	DeleteJudgeCaseByCaseIdRequest     = judge.DeleteJudgeCaseByCaseIdRequest
	DeleteJudgeCaseByCaseIdResponse    = judge.DeleteJudgeCaseByCaseIdResponse
	GetJudgeCaseIdsByProblemIdRequest  = judge.GetJudgeCaseIdsByProblemIdRequest
	GetJudgeCaseIdsByProblemIdResponse = judge.GetJudgeCaseIdsByProblemIdResponse
	JudgeCase                          = judge.JudgeCase
	JudgeRequest                       = judge.JudgeRequest
	JudgeResponse                      = judge.JudgeResponse
	UpdateJudgeCaseRequest             = judge.UpdateJudgeCaseRequest
	UpdateJudgeCaseResponse            = judge.UpdateJudgeCaseResponse

	JudgeService interface {
		Judge(ctx context.Context, in *JudgeRequest, opts ...grpc.CallOption) (*JudgeResponse, error)
		AddJudgeCases(ctx context.Context, in *AddJudgeCasesRequest, opts ...grpc.CallOption) (*AddJudgeCasesResponse, error)
		UpdateJudgeCase(ctx context.Context, in *UpdateJudgeCaseRequest, opts ...grpc.CallOption) (*UpdateJudgeCaseResponse, error)
		GetJudgeCaseIdsByProblemId(ctx context.Context, in *GetJudgeCaseIdsByProblemIdRequest, opts ...grpc.CallOption) (*GetJudgeCaseIdsByProblemIdResponse, error)
		DeleteJudgeCaseByCaseId(ctx context.Context, in *DeleteJudgeCaseByCaseIdRequest, opts ...grpc.CallOption) (*DeleteJudgeCaseByCaseIdResponse, error)
	}

	defaultJudgeService struct {
		cli zrpc.Client
	}
)

func NewJudgeService(cli zrpc.Client) JudgeService {
	return &defaultJudgeService{
		cli: cli,
	}
}

func (m *defaultJudgeService) Judge(ctx context.Context, in *JudgeRequest, opts ...grpc.CallOption) (*JudgeResponse, error) {
	client := judge.NewJudgeServiceClient(m.cli.Conn())
	return client.Judge(ctx, in, opts...)
}

func (m *defaultJudgeService) AddJudgeCases(ctx context.Context, in *AddJudgeCasesRequest, opts ...grpc.CallOption) (*AddJudgeCasesResponse, error) {
	client := judge.NewJudgeServiceClient(m.cli.Conn())
	return client.AddJudgeCases(ctx, in, opts...)
}

func (m *defaultJudgeService) UpdateJudgeCase(ctx context.Context, in *UpdateJudgeCaseRequest, opts ...grpc.CallOption) (*UpdateJudgeCaseResponse, error) {
	client := judge.NewJudgeServiceClient(m.cli.Conn())
	return client.UpdateJudgeCase(ctx, in, opts...)
}

func (m *defaultJudgeService) GetJudgeCaseIdsByProblemId(ctx context.Context, in *GetJudgeCaseIdsByProblemIdRequest, opts ...grpc.CallOption) (*GetJudgeCaseIdsByProblemIdResponse, error) {
	client := judge.NewJudgeServiceClient(m.cli.Conn())
	return client.GetJudgeCaseIdsByProblemId(ctx, in, opts...)
}

func (m *defaultJudgeService) DeleteJudgeCaseByCaseId(ctx context.Context, in *DeleteJudgeCaseByCaseIdRequest, opts ...grpc.CallOption) (*DeleteJudgeCaseByCaseIdResponse, error) {
	client := judge.NewJudgeServiceClient(m.cli.Conn())
	return client.DeleteJudgeCaseByCaseId(ctx, in, opts...)
}
